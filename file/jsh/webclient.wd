# Web Client 與爬蟲技術

## 前端的相關技術

前端的瀏覽器技術還有很多，除了傳統的 HTML/CSS/JavaScript 之外，新的標準技術有 HTML5/CSS3/ECMAScript6 等等。

另外前端的框架也有很多，像是 MVC 架構就有 [Backbone.js](http://backbonejs.org/), [Angular.js](https://angularjs.org/), [React.js](https://facebook.github.io/react/), [Vue.js](http://vuejs.org/) 等等。

對於我來說，有了 HTML/CSS/JavaScript + HTML5/CSS3 + Bootstrap + jQuery 就很夠用了，其他的就見招拆招吧！

有人說，前端技術每年都難兩倍，所以你如果要追那些新的前端框架，很難追得完。

如果已經要進業界工作，而且就是想走 web 網站設計的人，可以考慮從 Angular.js 與 React.js 這兩個當前主流的前端框架中挑一個來用，只要熟一個就很夠了。

而對於那些還不確定自己是否走這條路的人而言，倒是沒需要那麼急著學 Angular.js 與 React.js 這些 MVC 框架的！


### 下載網頁


# 抽取出網頁中的超連結

檔案： listurl.js

```javascript
var fs = require('fs');
var html = fs.readFileSync(process.argv[2]).toString();
var r = /href\s*=\s*"(.+?)"/gi;
while (true) {
  var m = r.exec(html);
  if (!m) break;
  console.log(m[1]);
}
```

執行結果：

```
NQU-192-168-60-101:regexp csienqu$ ls
copyfile.js  listurl.js   nqu.html     nqu.html.bak readfile.js  readline.js
NQU-192-168-60-101:regexp csienqu$ node listurl nqu.html
../cache/css194.css
../js/calendar/calendar-mos.css
index.php
index.php?act=sitemap
index.php
index.php?act=faq
mailto:chyi@nqu.edu.tw
javascript:window.external.AddFavorite ('http://www.nqu.edu.tw/','國立金門大學')
../cht/index.php?code=list&ids=1&launage=utf-8
../cht/index.php?code=list&ids=1&launage=gb
../eng/index.php
...
...
```


### 網路爬蟲

# 網頁下載 （下載一個網頁）

## 程式

檔案： pageget.js

```javascript
var http = require('http');

http.get("http://www.nqu.edu.tw/cht/index.php?", function(res) {
  console.log("Got response: " + res.statusCode);
  res.on('data', function (chunk) {
    console.log('BODY: ' + chunk);
  });
}).on('error', function(e) {
  console.log("Got error: " + e.message);
});
```

## 執行結果

```
NQU-192-168-60-101:crawler csienqu$ node pageget.js
Got response: 200
BODY: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="zh-TW">

<head>
  <title>國立金門大學-></title>
...
</body>
</html>
```



# 網頁爬蟲 -- 下載全世界的網頁（只要你記憶體和硬碟夠大）

專案下載： @[[crawler.zip]](crawler.zip)

程式： crawler.js
```javascript
// 安裝套件： npm install URIjs
// 執行方法： node crawler http://tw.msn.com/
var fs = require('fs');
var http = require('http');
var URI = require('URIjs');
var c = console;

var urlMap  = { };
var urlList = [ ];
var urlIdx  = 0;

urlList.push(process.argv[2]); // 新增第一個網址

crawNext(); // 開始抓

function crawNext() { // 下載下一個網頁
  if (urlIdx >= urlList.length) 
    return;
  var url = urlList[urlIdx];
  if (url.indexOf('http://')!==0) {
    urlIdx ++;
    crawNext();
    return;
  }
  c.log('url[%d]=%s', urlIdx, url);
  urlMap[url] = { downlioad:false };
  pageDownload(url, function (data) {
    var page = data.toString();
    urlMap[url].download = true;
    var filename = urlToFileName(url);
    fs.writeFile('data/'+filename, page, function(err) {
    });
    var refs = getMatches(page, /\shref\s*=\s*["'#]([^"'#]*)[#"']/gi, 1);
    for (i in refs) {
      try {
      var refUri = URI(refs[i]).absoluteTo(url).toString();
      c.log('ref=%s', refUri);
      if (refUri !== undefined && urlMap[refUri] === undefined)
        urlList.push(refUri);
      } catch (e) {}
    }
    urlIdx ++;
    crawNext();
  });
}
// 下載一個網頁
function pageDownload(url, callback) {
  http.get(url, function(res) {
    res.on('data', callback);
  }).on('error', function(e) {
    console.log("Got error: " + e.message);
  });
}
// 取得正規表達式比對到的結果成為一個陣列
function getMatches(string, regex, index) {
    index || (index = 1); // default to the first capturing group
    var matches = [];
    var match;
    while (match = regex.exec(string)) {
        matches.push(match[index]);
    }
    return matches;
}
// 將網址改寫為合法的檔案名稱
function urlToFileName(url) {
  return url.replace(/[^\w]/gi, '_');
}
```

## 執行方法

```
NQU-192-168-60-101:crawler csienqu$ npm install URIjs
NQU-192-168-60-101:crawler csienqu$ node crawler http://tw.msn.com/
....
```


### 搜尋引擎 -- ElasticSearch


# 搜尋引擎 ElasticSearch

* [ElasticSearch 第一發 - 入門筆記](http://blog.winwu.today/2014/07/elasticsearch.html)
* [ElasticSearch.js](https://github.com/elastic/elasticsearch-js)


### 自己打造一個 Google 
